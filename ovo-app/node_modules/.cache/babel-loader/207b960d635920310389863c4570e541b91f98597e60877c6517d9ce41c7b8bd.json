{"ast":null,"code":"var _jsxFileName = \"/Users/suprabhodhenki/Documents/Promad/suprabho.github.io/Rive/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport { useRive, Layout, Fit, Alignment } from \"@rive-app/react-canvas\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst states = [{\n  value: '0',\n  label: 'Standby'\n}, {\n  value: '1',\n  label: 'Searching'\n}, {\n  value: '2',\n  label: 'Suggestions'\n}, {\n  value: '3',\n  label: 'Painting'\n}, {\n  value: '4',\n  label: 'Listening'\n}, {\n  value: '5',\n  label: 'Talking'\n}, {\n  value: '101',\n  label: 'Bored'\n}, {\n  value: '102',\n  label: 'Success'\n}, {\n  value: '103',\n  label: 'Retry'\n}, {\n  value: '104',\n  label: 'Failure'\n}, {\n  value: '105',\n  label: 'Dance Step 1'\n}, {\n  value: '106',\n  label: 'Dance Step 2'\n}, {\n  value: '107',\n  label: 'Dance Step 3'\n}, {\n  value: '108',\n  label: 'Dance Step 4'\n}];\nconst themeInputs = [{\n  name: 'Skin',\n  maxValue: 2\n}, {\n  name: 'Headgear',\n  maxValue: 15\n}, {\n  name: 'Specs',\n  maxValue: 5\n}, {\n  name: 'Muffler',\n  maxValue: 5\n}, {\n  name: 'BG',\n  maxValue: 5\n}];\nexport const RiveDemo = () => {\n  _s();\n  const [activeState, setActiveState] = useState('0'); // Default to Standby state\n\n  const {\n    RiveComponent,\n    rive\n  } = useRive({\n    // Load a local riv `clean_the_car.riv` or upload your own!\n    src: \"owl.riv\",\n    // Be sure to specify the correct state machine (or animation) name\n    stateMachines: \"State Machine Main\",\n    // This is optional.Provides additional layout control.\n    layout: new Layout({\n      fit: Fit.Cover,\n      // Change to: rive.Fit.Contain, or Cover\n      alignment: Alignment.Center\n    }),\n    autoplay: true\n  });\n  const triggerState = stateName => {\n    if (rive && rive.stateMachineInputs) {\n      const inputs = rive.stateMachineInputs('State Machine Main');\n      const input = inputs.find(i => i.name === 'State');\n      if (input) {\n        input.value = parseInt(stateName);\n        setActiveState(stateName);\n      }\n    }\n  };\n  const randomizeTheme = () => {\n    if (rive && rive.stateMachineInputs) {\n      const inputs = rive.stateMachineInputs('State Machine Main');\n      themeInputs.forEach(themeInput => {\n        const input = inputs.find(i => i.name === themeInput.name);\n        if (input) {\n          input.value = Math.floor(Math.random() * (themeInput.maxValue + 1));\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rive-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(RiveComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-button\",\n        onClick: randomizeTheme,\n        children: \"Random Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => triggerState(state.value),\n        className: activeState === state.value ? 'active' : '',\n        children: state.label\n      }, state.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RiveDemo, \"0tgobkqR50/uhNZ7QCwR3s6xg/A=\", false, function () {\n  return [useRive];\n});\n_c = RiveDemo;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rive-container\",\n      children: /*#__PURE__*/_jsxDEV(RiveDemo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RiveDemo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useRive","Layout","Fit","Alignment","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","states","value","label","themeInputs","name","maxValue","RiveDemo","_s","activeState","setActiveState","RiveComponent","rive","src","stateMachines","layout","fit","Cover","alignment","Center","autoplay","triggerState","stateName","stateMachineInputs","inputs","input","find","i","parseInt","randomizeTheme","forEach","themeInput","Math","floor","random","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","state","_c","App","_c2","$RefreshReg$"],"sources":["/Users/suprabhodhenki/Documents/Promad/suprabho.github.io/Rive/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport { useRive, Layout, Fit, Alignment } from \"@rive-app/react-canvas\";\nimport { useState } from 'react';\n\nconst states = [\n  { value: '0', label: 'Standby' },\n  { value: '1', label: 'Searching' },\n  { value: '2', label: 'Suggestions' },\n  { value: '3', label: 'Painting' },\n  { value: '4', label: 'Listening' },\n  { value: '5', label: 'Talking' },\n  { value: '101', label: 'Bored' },\n  { value: '102', label: 'Success' },\n  { value: '103', label: 'Retry' },\n  { value: '104', label: 'Failure' },\n  { value: '105', label: 'Dance Step 1' },\n  { value: '106', label: 'Dance Step 2' },\n  { value: '107', label: 'Dance Step 3' },\n  { value: '108', label: 'Dance Step 4' },\n];\n\nconst themeInputs = [\n  { name: 'Skin', maxValue: 2 },\n  { name: 'Headgear', maxValue: 15 },\n  { name: 'Specs', maxValue: 5 },\n  { name: 'Muffler', maxValue: 5 },\n  { name: 'BG', maxValue: 5 },\n];\n\nexport const RiveDemo = () => {\n  const [activeState, setActiveState] = useState('0'); // Default to Standby state\n\n  const { RiveComponent, rive } = useRive({\n    // Load a local riv `clean_the_car.riv` or upload your own!\n    src: \"owl.riv\",\n    // Be sure to specify the correct state machine (or animation) name\n    stateMachines: \"State Machine Main\",\n    // This is optional.Provides additional layout control.\n    layout: new Layout({\n      fit: Fit.Cover, // Change to: rive.Fit.Contain, or Cover\n      alignment: Alignment.Center,\n    }),\n    autoplay: true,\n  });\n\n  const triggerState = (stateName) => {\n    if (rive && rive.stateMachineInputs) {\n      const inputs = rive.stateMachineInputs('State Machine Main');\n      const input = inputs.find(i => i.name === 'State');\n      if (input) {\n        input.value = parseInt(stateName);\n        setActiveState(stateName);\n      }\n    }\n  };\n\n  const randomizeTheme = () => {\n    if (rive && rive.stateMachineInputs) {\n      const inputs = rive.stateMachineInputs('State Machine Main');\n      themeInputs.forEach(themeInput => {\n        const input = inputs.find(i => i.name === themeInput.name);\n        if (input) {\n          input.value = Math.floor(Math.random() * (themeInput.maxValue + 1));\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"rive-wrapper\">\n        <RiveComponent />\n      </div>\n      <div className=\"controls\">\n        <button \n          className=\"theme-button\"\n          onClick={randomizeTheme}\n        >\n          Random Theme\n        </button>\n        {states.map(state => (\n          <button \n            key={state.value} \n            onClick={() => triggerState(state.value)}\n            className={activeState === state.value ? 'active' : ''}\n          >\n            {state.label}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"app-container\">\n      <div className=\"rive-container\">\n        <RiveDemo />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}